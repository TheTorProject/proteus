PACKAGE = github.com/thetorproject/proteus
VERSION="0.1.0-rc.1"
GOFILES := $(shell find . -name "*.go" -type f -not -path "./vendor/*" -not -name "bindata.go")
COMMIT_HASH = `git rev-parse --short HEAD 2>/dev/null`
BUILD_DATE = `date +%FT%T%z`
LDFLAGS = -ldflags "-X ${PACKAGE}/proteus-common.CommitHash=${COMMIT_HASH} -X ${PACKAGE}/proteus-common.BuildDate=${BUILD_DATE}"
NOGI_LDFLAGS = -ldflags "-X ${PACKAGE}/proteus-common.BuildDate=${BUILD_DATE}"
ARCH_LIST=linux/amd64 darwin/amd64 linux/386
TOOL_LIST=registry orchestrate
RELEASE_OSARCH = -osarch "${ARCH_LIST}"
OUTPUT_SUFFIX = "${VERSION}.{{.OS}}-{{.Arch}}/{{.Dir}}"

vendor:
	@hash govendor > /dev/null 2>&1; if [ $$? -ne 0 ]; then \
		go get github.com/kardianos/govendor; \
	fi
	govendor sync proteus

vendor-fetch:
	@hash govendor > /dev/null 2>&1; if [ $$? -ne 0 ]; then \
		go get github.com/kardianos/govendor; \
	fi
	govendor fetch +external

fmt:
	gofmt -s -w $(GOFILES)

fmt-check:
	@diff=$$(gofmt -d $(GOFILES));               \
	if [ -n "$$diff" ]; then                     \
		echo "Please run 'make fmt' and commit"; \
		echo "$${diff}";                         \
		exit 1;                                  \
	fi

lint: PACKAGES = $(shell govendor list -no-status +local)
lint:
	@hash golint > /dev/null 2>&1; if [ $$? -ne 0 ]; then \
		go get -u github.com/golang/lint/golint; \
	fi
	for PKG in $(PACKAGES); do golint -set_exit_status $$PKG || exit 1; done;

test: PACKAGES = $(shell govendor list -no-status +local)
test: fmt-check
	echo "mode: count" > coverage-all.txt
	$(foreach pkg,$(PACKAGES),                                             \
		govendor test -coverprofile=coverage.txt -covermode=count $(pkg) || exit 1  \
		tail -n +2 coverage.txt >> coverage-all.txt;)
	go tool cover -html=coverage-all.txt

check: fmt-check test

bindata:
	@hash go-bindata > /dev/null 2>&1; if [ $$? -ne 0 ]; then              \
		go get -u github.com/jteeuwen/go-bindata/...;                      \
	fi
	@go-bindata -prefix proteus-common/                                     \
		-o proteus-common/bindata.go -pkg common 				           \
	    proteus-common/data/...;
	@sed -i.backup 's/Code generated by go-bindata./Code generated by go-bindata. DO NOT EDIT./' \
	    proteus-common/bindata.go;
	@rm proteus-common/bindata.go.backup
	@for tool in ${TOOL_LIST}; do                                          \
	  if [ -d proteus-$$tool/data ]; then                                  \
	    extra_dirs="proteus-$$tool/data/...";                              \
	  fi;                                                                  \
	  go-bindata -prefix proteus-$$tool/                                   \
	    -o proteus-$$tool/$$tool/bindata.go -pkg $$tool                    \
	    proteus-common/data/... $$extra_dirs;                              \
	  sed -i.backup 's/Code generated by go-bindata./Code generated by go-bindata. DO NOT EDIT./' \
	    proteus-$$tool/$$tool/bindata.go;                                  \
	  rm proteus-$$tool/$$tool/bindata.go.backup;						   \
	done

build-all: bindata build-orchestrate build-registry

build-orchestrate:
	go build ${LDFLAGS} -o bin/proteus-orchestrate proteus-orchestrate/main.go
build-registry:
	go build ${LDFLAGS} -o bin/proteus-registry proteus-registry/main.go

proteus: vendor build-all

proteus-no-gitinfo: LDFLAGS = ${NOGI_LDFLAGS}
proteus-no-gitinfo: vendor proteus

release: fmt-check bindata
	go get github.com/goreleaser/goreleaser
	goreleaser

.PHONY: vendor build build-orchestrate build-registry release bindata build-all fmt fmt-check check
